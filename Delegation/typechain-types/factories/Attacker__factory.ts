/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Attacker, AttackerInterface } from "../Attacker";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IToken",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "attack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610375380380610375833981810160405281019061003291906100ed565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b60006100ba8261009d565b9050919050565b6100ca816100af565b81146100d557600080fd5b50565b6000815190506100e7816100c1565b92915050565b60006020828403121561010357610102610078565b5b6000610111848285016100d8565b91505092915050565b61024c806101296000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80639e5faafc14610030575b600080fd5b61003861003a565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3368056bc75e2d631000006040518363ffffffff1660e01b815260040161009e929190610183565b602060405180830381600087803b1580156100b857600080fd5b505af11580156100cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f091906101e9565b50565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061011e826100f3565b9050919050565b61012e81610113565b82525050565b6000819050919050565b6000819050919050565b6000819050919050565b600061016d61016861016384610134565b610148565b61013e565b9050919050565b61017d81610152565b82525050565b60006040820190506101986000830185610125565b6101a56020830184610174565b9392505050565b600080fd5b60008115159050919050565b6101c6816101b1565b81146101d157600080fd5b50565b6000815190506101e3816101bd565b92915050565b6000602082840312156101ff576101fe6101ac565b5b600061020d848285016101d4565b9150509291505056fea2646970667358221220ff7479e6cd564341cc0f1361da46f3a7768a7b0bef313133aa8566e0487c397564736f6c63430008090033";

type AttackerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttackerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Attacker__factory extends ContractFactory {
  constructor(...args: AttackerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Attacker> {
    return super.deploy(_token, overrides || {}) as Promise<Attacker>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override attach(address: string): Attacker {
    return super.attach(address) as Attacker;
  }
  override connect(signer: Signer): Attacker__factory {
    return super.connect(signer) as Attacker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttackerInterface {
    return new utils.Interface(_abi) as AttackerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Attacker {
    return new Contract(address, _abi, signerOrProvider) as Attacker;
  }
}
